<Activity mc:Ignorable="sap sap2010" x:Class="acrobat" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml" xmlns:u="clr-namespace:UiPathCustomActivity;assembly=UipathCustomActivities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="basePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>5890,23912</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>acrobat_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>iTextSharp.text.pdf</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="25">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>itextsharp</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="acrobat" sap:VirtualizedContainerService.HintSize="5900,23747" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Document" Name="document" />
      <Variable x:TypeArguments="s:String[]" Name="tagarray" />
      <Variable x:TypeArguments="x:String" Default="[Document]" Name="doctag" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="hcount" />
      <Variable x:TypeArguments="x:String" Default="H1" Name="htag" />
      <Variable x:TypeArguments="x:String" Name="OutputPaths" />
      <Variable x:TypeArguments="x:String" Name="TestResult" />
      <Variable x:TypeArguments="x:Int32" Name="counterr" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="h1List" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="isIndexAdded" />
      <Variable x:TypeArguments="x:String" Name="nextIndex" />
      <Variable x:TypeArguments="x:String" Name="firstH1" />
      <Variable x:TypeArguments="x:Int32" Name="parentIndex" />
      <Variable x:TypeArguments="x:Int32" Name="SectionCount" />
      <Variable x:TypeArguments="x:Int32" Name="ListCount" />
      <Variable x:TypeArguments="x:String" Name="DestPathForPdfCopy" />
      <Variable x:TypeArguments="x:String" Name="baseAddress" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="NoteNo" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="NotePage" />
      <Variable x:TypeArguments="x:Int32" Name="PageNoForNote" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="NoteIssuesList" />
      <Variable x:TypeArguments="x:String" Name="pfdPathForCode" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="AstrikOrHyphenCollection" />
      <Variable x:TypeArguments="x:String" Name="pageWithAstrikORHyphen" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="TableHeaderList" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="FigureIssuesList" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="TableSummaryList" />
      <Variable x:TypeArguments="x:Int32" Name="TablePage" />
      <Variable x:TypeArguments="x:Int32" Name="TableNo" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="TOCHyperLinkList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="fileDetails" sap:VirtualizedContainerService.HintSize="5858,1221" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="inputPath" />
        <Variable x:TypeArguments="x:String" Name="path" />
        <Variable x:TypeArguments="s:String[]" Name="entries" />
        <Variable x:TypeArguments="si:FileAttributes" Name="attr" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_212">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[basePath]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">C:\Users\anshubeniwal\Desktop\RPA_PDF3.1\RPA_PDF_XAMLS\</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InvokeCode ContinueOnError="{x:Null}" Code="baseAddress=basePath;&#xA;inputPath=baseAddress+&quot;inputPath.txt&quot;;&#xA;OutputPaths=baseAddress +&quot;outputPaths.txt&quot;;&#xA;DestPathForPdfCopy=baseAddress+&quot;copy.pdf&quot;;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="562,164" sap2010:WorkflowViewState.IdRef="InvokeCode_25" Language="CSharp">
        <ui:InvokeCode.Arguments>
          <InOutArgument x:TypeArguments="x:String" x:Key="basePath">[basePath]</InOutArgument>
          <InOutArgument x:TypeArguments="x:String" x:Key="baseAddress">[baseAddress]</InOutArgument>
          <InOutArgument x:TypeArguments="x:String" x:Key="inputPath">[inputPath]</InOutArgument>
          <InOutArgument x:TypeArguments="x:String" x:Key="OutputPaths">[OutputPaths]</InOutArgument>
          <InOutArgument x:TypeArguments="x:String" x:Key="DestPathForPdfCopy">[DestPathForPdfCopy]</InOutArgument>
        </ui:InvokeCode.Arguments>
      </ui:InvokeCode>
      <ui:ReadTextFile Content="[path]" DisplayName="Read Text File" FileName="[inputPath]" sap:VirtualizedContainerService.HintSize="562,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
      <Assign sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[entries]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFileSystemEntries(path, "*", SearchOption.AllDirectories)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,606" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[entries]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,472" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="si:FileAttributes">[attr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="si:FileAttributes">[File.GetAttributes(item.ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[attr.HasFlag(FileAttributes.Directory)]" sap:VirtualizedContainerService.HintSize="484,280" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Else>
                  <ui:AppendLine DisplayName="Append Line" FileName="[OutputPaths]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_10" Text="[item.ToString+&quot;,&quot;]" />
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <ui:OpenApplication ApplicationWindow="{x:Null}" Arguments="{x:Null}" TimeoutMS="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open Application 'Acrobat.exe Adobe'" FileName="C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\Acrobat.exe" sap:VirtualizedContainerService.HintSize="5858,22394" sap2010:WorkflowViewState.IdRef="OpenApplication_1" InformativeScreenshot="e32932b92e83bf2a5de923f16ddf1a72" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='Adobe Acrobat Pro DC' /&gt;">
      <ui:OpenApplication.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="DoParent" sap:VirtualizedContainerService.HintSize="5824,22248" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="pdfname" />
              <Variable x:TypeArguments="s:String[]" Name="fileName" />
              <Variable x:TypeArguments="x:Int32" Default="1" Name="i" />
              <Variable x:TypeArguments="x:String" Name="output" />
              <Variable x:TypeArguments="x:Boolean" Name="h1Delete" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadTextFile Content="[pdfname]" DisplayName="Read Text File" FileName="[OutputPaths]" sap:VirtualizedContainerService.HintSize="5782,79" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
            <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="5782,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[OutputPaths]" />
            <Assign sap:VirtualizedContainerService.HintSize="5782,60" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[fileName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[pdfname.Split(new Char(){","c}).Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="5782,21729" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[fileName]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="name" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="5746,21596" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Default="0" Name="doccount" />
                      <Variable x:TypeArguments="x:String" Name="selectedValue" />
                      <Variable x:TypeArguments="x:Int32" Name="indexofList" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="newList" />
                      <Variable x:TypeArguments="s:String[]" Name="output2l" />
                      <Variable x:TypeArguments="x:String" Default="Disc" Name="result" />
                      <Variable x:TypeArguments="x:Boolean" Name="errorOrNot" />
                      <Variable x:TypeArguments="scg:List(x:Boolean)" Name="errorList" />
                      <Variable x:TypeArguments="x:Int32" Name="counters" />
                      <Variable x:TypeArguments="x:String" Name="title" />
                      <Variable x:TypeArguments="x:Int32" Name="listNumber" />
                      <Variable x:TypeArguments="s:String[]" Name="output2" />
                      <Variable x:TypeArguments="scg:List(x:Int32)" Name="myList" />
                      <Variable x:TypeArguments="x:Int32" Name="pageNo" />
                      <Variable x:TypeArguments="scg:List(x:Int32)" Name="errorPages" />
                      <Variable x:TypeArguments="scg:List(x:Int32)" Name="errPage" />
                      <Variable x:TypeArguments="x:Int32" Name="counter" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="pageNumber" />
                      <Variable x:TypeArguments="x:Int32" Name="page" />
                      <Variable x:TypeArguments="x:Int32" Default="0" Name="listNo" />
                      <Variable x:TypeArguments="x:Int32" Default="1" Name="prePage" />
                      <Variable x:TypeArguments="scg:List(x:Int32)" Name="h1IndexList" />
                      <Variable x:TypeArguments="x:String" Name="h1Index" />
                      <Variable x:TypeArguments="x:Int32" Default="0" Name="sectionNo" />
                      <Variable x:TypeArguments="x:Int32" Name="secq" />
                      <Variable x:TypeArguments="x:Int32" Default="1" Name="sectpage" />
                      <Variable x:TypeArguments="x:String" Name="output1" />
                      <Variable x:TypeArguments="x:String" Name="listContentIndex" />
                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="listNumbering" />
                      <Variable x:TypeArguments="s:String[]" Name="pathParts" />
                      <Variable x:TypeArguments="x:String" Name="XmlFilename" />
                      <Variable x:TypeArguments="x:String" Name="pathRequiredByXML" />
                      <Variable x:TypeArguments="scg:List(x:Int32)" Name="PagesWithListError" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[(new FileInfo(name.ToString.Remove(0,4)).Extension).Equals(&quot;.pdf&quot;)]" sap:VirtualizedContainerService.HintSize="5704,21504" sap2010:WorkflowViewState.IdRef="If_205">
                      <If.Then>
                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="5459,21357" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <TryCatch.Try>
                            <Sequence sap:VirtualizedContainerService.HintSize="5421,19126" sap2010:WorkflowViewState.IdRef="Sequence_303">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Int32" Name="chekVieww" />
                                <Variable x:TypeArguments="x:Int32" Name="numberOfPages" />
                                <Variable x:TypeArguments="x:String" Name="ResultFileName" />
                                <Variable x:TypeArguments="x:Int32" Name="checkTags" />
                                <Variable x:TypeArguments="x:String" Name="FixedFilesPath" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_220">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:String[]">[pathParts]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:String[]">[name.ToString.Split(New Char() {"\"c})]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_221">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[XmlFilename]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[pathParts(pathParts.Length-1).Replace(".pdf",".xml").Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_222">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ResultFileName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[pathParts(pathParts.Length-1).Replace(".pdf",".txt").Trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_259">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[TestResult]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.IO.Directory.GetParent(baseAddress).Parent.FullName+"\RESULT_FOLDER\"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[System.IO.Directory.Exists(TestResult)]" sap:VirtualizedContainerService.HintSize="5379,311" sap2010:WorkflowViewState.IdRef="If_208">
                                <If.Then>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_223">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[TestResult]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[TestResult+ResultFileName]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="System.IO.Directory.CreateDirectory(TestResult);&#xA;TestResult=TestResult+ResultFilename;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_27" Language="CSharp">
                                    <ui:InvokeCode.Arguments>
                                      <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ResultFilename">[ResultFileName]</InArgument>
                                    </ui:InvokeCode.Arguments>
                                  </ui:InvokeCode>
                                </If.Else>
                              </If>
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_258">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[FixedFilesPath]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.IO.Directory.GetParent(baseAddress).Parent.FullName+"\FIXED_PDFS\"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[System.IO.Directory.Exists(FixedFilesPath)]" sap:VirtualizedContainerService.HintSize="5379,311" sap2010:WorkflowViewState.IdRef="If_207">
                                <If.Else>
                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="System.IO.Directory.CreateDirectory(FixedFilesPath);" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_26" Language="CSharp">
                                    <ui:InvokeCode.Arguments>
                                      <InOutArgument x:TypeArguments="x:String" x:Key="FixedFilesPath">[FixedFilesPath]</InOutArgument>
                                    </ui:InvokeCode.Arguments>
                                  </ui:InvokeCode>
                                </If.Else>
                              </If>
                              <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="5379,132" sap2010:WorkflowViewState.IdRef="AppendLine_116" Text="[name.ToString]" />
                              <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="5379,132" sap2010:WorkflowViewState.IdRef="AppendLine_117" Text="[System.DateTime.Now.ToString]" />
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_224">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[pfdPathForCode]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[name.ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[name.ToString.Equals(fileName(0))]" sap:VirtualizedContainerService.HintSize="5379,503" sap2010:WorkflowViewState.IdRef="If_169">
                                <If.Then>
                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="PdfReader pdfReader = new PdfReader(ppath);&#xA;numberOfPages = pdfReader.NumberOfPages;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_17" Language="CSharp">
                                    <ui:InvokeCode.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="ppath">[pfdPathForCode]</InArgument>
                                      <InOutArgument x:TypeArguments="x:Int32" x:Key="numberOfPages">[numberOfPages]</InOutArgument>
                                    </ui:InvokeCode.Arguments>
                                  </ui:InvokeCode>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,356" sap2010:WorkflowViewState.IdRef="Sequence_274">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_225">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[pfdPathForCode]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[name.ToString.Remove(0,4).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="PdfReader pdfReader = new PdfReader(ppath);&#xA;numberOfPages = pdfReader.NumberOfPages;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_18" Language="CSharp">
                                      <ui:InvokeCode.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="ppath">[pfdPathForCode]</InArgument>
                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="numberOfPages">[numberOfPages]</InOutArgument>
                                      </ui:InvokeCode.Arguments>
                                    </ui:InvokeCode>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="5379,132" sap2010:WorkflowViewState.IdRef="AppendLine_118" Text="[&quot;Total Number of Pages: &quot;+numberOfPages.ToString]" />
                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="File.Copy(sourcePdf,DestinationPdf);" DisplayName="Invoke code(pdf copy)" sap:VirtualizedContainerService.HintSize="5379,164" sap2010:WorkflowViewState.IdRef="InvokeCode_23" Language="CSharp">
                                <ui:InvokeCode.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="sourcePdf">[pfdPathForCode]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="DestinationPdf">[DestPathForPdfcopy]</InArgument>
                                </ui:InvokeCode.Arguments>
                              </ui:InvokeCode>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'menu item  File'" sap:VirtualizedContainerService.HintSize="5379,106" sap2010:WorkflowViewState.IdRef="Click_71" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="35476223-93dc-407c-8bd3-d6f2e6c625b4" InformativeScreenshot="0787c14d730c43de1a41202915a92d18" Selector="&lt;ctrl automationid='MenuBar' idx='1' name='Application' role='menu bar' /&gt;&lt;ctrl name='File' role='menu item' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'menu item'" sap:VirtualizedContainerService.HintSize="5379,106" sap2010:WorkflowViewState.IdRef="Click_72" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="22611690-5ad8-46b2-8bd5-bcfd3bf05b1e" InformativeScreenshot="dd70c75164b9f14c13e1c7d3624a422c" Selector="&lt;wnd app='acrobat.exe' cls='#32768' idx='*' /&gt;&lt;ctrl name='File' role='popup menu' /&gt;&lt;ctrl automationid='6000' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="5379,134" sap2010:WorkflowViewState.IdRef="TypeInto_4" Text="[name.ToString]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f947b1f4-bd56-49ee-93d9-be777fb34924" InformativeScreenshot="5f791ec5bead1b36f9a66fcd8ab155d0" Selector="&lt;wnd app='acrobat.exe' cls='#32770' title='Open' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="5379,106" sap2010:WorkflowViewState.IdRef="Click_73" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="783493a6-0273-42c3-a90e-51ea7fe9b690" InformativeScreenshot="3507cf960ed1d572215613dd4c487fe3" Selector="&lt;wnd app='acrobat.exe' cls='#32770' title='Open' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Open' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text" sap:VirtualizedContainerService.HintSize="5379,68" sap2010:WorkflowViewState.IdRef="GetValue_8">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="bcb1d12d-6936-49c1-af84-12c9ffd9a21b">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[title]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <Assign sap:VirtualizedContainerService.HintSize="5379,60" sap2010:WorkflowViewState.IdRef="Assign_226">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[pathRequiredByXML]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[baseAddress]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="5379,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="ExportXml.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="title">[title]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="pathRequiredByXML">[pathRequiredByXML]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="visibility" DisplayName="Get Attribute 'push button  Tags'" sap:VirtualizedContainerService.HintSize="5379,134" sap2010:WorkflowViewState.IdRef="GetAttribute_2">
                                <ui:GetAttribute.Result>
                                  <OutArgument x:TypeArguments="x:Int32">[chekVieww]</OutArgument>
                                </ui:GetAttribute.Result>
                                <ui:GetAttribute.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8435f9ab-0b18-4211-bf3b-8942d5126bca" InformativeScreenshot="745ae4de3ff397f27195646121b65770" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd cls='AVL_AVView' idx='3' title='AVFlipContainerView' /&gt;&lt;ctrl idx='1' name='Navigation Pane' role='grouping' /&gt;&lt;ctrl name='Tags' role='push button' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetAttribute.Target>
                              </ui:GetAttribute>
                              <If Condition="[chekVieww=0]" sap:VirtualizedContainerService.HintSize="5379,491" sap2010:WorkflowViewState.IdRef="If_170">
                                <If.Then>
                                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Tags'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_74" KeyModifiers="None" MouseButton="BTN_LEFT">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="472bd3e7-4332-4ed6-a7c1-97a2d0fbed99" InformativeScreenshot="56f38feeaab47ca005e6c4a409c0064d" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd cls='AVL_AVView' idx='3' title='AVFlipContainerView' /&gt;&lt;ctrl idx='1' name='Navigation Pane' role='grouping' /&gt;&lt;ctrl name='Tags' role='push button' /&gt;">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </ui:Click.Target>
                                  </ui:Click>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,344" sap2010:WorkflowViewState.IdRef="Sequence_276">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_75" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ce920ff9-0623-4663-a4c8-5c37ba4e615f" InformativeScreenshot="4d1823fcbfcddba72267199dfc4eb01f" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd cls='AVL_AVView' idx='2' title='AVExpandCollapseButtonView' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'push button  Tags'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_76" KeyModifiers="None" MouseButton="BTN_LEFT">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="472bd3e7-4332-4ed6-a7c1-97a2d0fbed99" InformativeScreenshot="56f38feeaab47ca005e6c4a409c0064d" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd cls='AVL_AVView' idx='3' title='AVFlipContainerView' /&gt;&lt;ctrl idx='1' name='Navigation Pane' role='grouping' /&gt;&lt;ctrl name='Tags' role='push button' /&gt;">
                                          <ui:Target.TimeoutMS>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:Target.TimeoutMS>
                                          <ui:Target.WaitForReady>
                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                          </ui:Target.WaitForReady>
                                        </ui:Target>
                                      </ui:Click.Target>
                                    </ui:Click>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'outline item  Tags'" sap:VirtualizedContainerService.HintSize="5379,106" sap2010:WorkflowViewState.IdRef="Click_77" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e29dbf4e-193d-4845-ba58-b4ed6e13b845" InformativeScreenshot="514fa42be31d16095364feac82921fe8" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd aaname='Left Task Pane' cls='AVL_AVView' title='PrimaryHostView' /&gt;&lt;wnd aaname='Ta&amp;amp;gs' cls='AVL_AVView' title='AVPanelView' /&gt;&lt;wnd cls='AVL_AVView' title='AVTreeViewClass' /&gt;&lt;ctrl idx='1' name='Tags' role='outline item' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="pageNumber=New System.Collections.Generic.List(Of String)&#xA;myList=New System.Collections.Generic.List(Of Int32)&#xA;PagesWithListError=New System.Collections.Generic.List(Of Int32)&#xA;NoteIssuesList=New System.Collections.Generic.List(Of String)&#xA;errorList=New System.Collections.Generic.List(Of Boolean)&#xA;h1List=New System.Collections.Generic.List(Of String)&#xA;h1IndexList=New System.Collections.Generic.List(Of Int32)&#xA;AstrikOrHyphenCollection=New System.Collections.Generic.List(Of String)&#xA;TableHeaderList=New System.Collections.Generic.List(Of String)&#xA;FigureIssuesList=New System.Collections.Generic.List(Of String)&#xA;TableSummaryList=New System.Collections.Generic.List(Of String)&#xA;TOCHyperLinkList=New System.Collections.Generic.List(Of String)&#xA;listNumberings = New System.Collections.Generic.Dictionary(Of String,String)&#xA;listNumberings.Add(&quot;●&quot;, &quot;Disc&quot;)&#xA;listNumberings.Add(&quot;•&quot;, &quot;Disc&quot;)&#xA;listNumberings.Add(&quot;&quot;, &quot;Disc&quot;)&#xA;listNumberings.Add(&quot;o&quot;, &quot;Circle&quot;)&#xA;listNumberings.Add(&quot;○&quot;, &quot;Circle&quot;)&#xA;listNumberings.Add(&quot;☐&quot;, &quot;Square&quot;)&#xA;listNumberings.Add(&quot;.&quot;, &quot;Disc&quot;)&#xA;listNumberings.Add(&quot;(1)&quot;,&quot;Decimal&quot;)&#xA;listNumberings.Add(&quot;1.&quot;,&quot;Decimal&quot;)&#xA;listNumberings.Add(&quot;1)&quot;,&quot;Decimal&quot;)&#xA;listNumberings.Add(&quot;1&quot;,&quot;Decimal&quot;)&#xA;listNumberings.Add(&quot;(a)&quot;,&quot;LowerAlpha&quot;)&#xA;listNumberings.Add(&quot;a)&quot;,&quot;LowerAlpha&quot;)&#xA;listNumberings.Add(&quot;a.&quot;,&quot;LowerAlpha&quot;)&#xA;listNumberings.Add(&quot;a&quot;,&quot;LowerAlpha&quot;)&#xA;listNumberings.Add(&quot;(A)&quot;,&quot;UpperAlpha&quot;)&#xA;listNumberings.Add(&quot;A)&quot;,&quot;UpperAlpha&quot;)&#xA;listNumberings.Add(&quot;A.&quot;,&quot;UpperAlpha&quot;)&#xA;listNumberings.Add(&quot;A&quot;,&quot;UpperAlpha&quot;)&#xA;listNumberings.Add(&quot;(i)&quot;, &quot;LowerRoman&quot;)&#xA;listNumberings.Add(&quot;i)&quot;, &quot;LowerRoman&quot;)&#xA;listNumberings.Add(&quot;i.&quot;, &quot;LowerRoman&quot;)&#xA;listNumberings.Add(&quot;i&quot;, &quot;LowerRoman&quot;)&#xA;listNumberings.Add(&quot;(I)&quot;, &quot;UpperRoman&quot;)&#xA;listNumberings.Add(&quot;I)&quot;, &quot;UpperRoman&quot;)&#xA;listNumberings.Add(&quot;I.&quot;, &quot;UpperRoman&quot;)&#xA;listNumberings.Add(&quot;I&quot;, &quot;UpperRoman&quot;)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="5379,164" sap2010:WorkflowViewState.IdRef="InvokeCode_19">
                                <ui:InvokeCode.Arguments>
                                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumberings">[listNumbering]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="NoteIssuesList">[NoteIssuesList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableHeaderList">[TableHeaderList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="FigureIssuesList">[FigureIssuesList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableSummaryList">[TableSummaryList]</InOutArgument>
                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TOCHyperLinkList">[TOCHyperLinkList]</InOutArgument>
                                </ui:InvokeCode.Arguments>
                              </ui:InvokeCode>
                              <Sequence DisplayName="MAIN PROCESS" sap:VirtualizedContainerService.HintSize="5379,8661" sap2010:WorkflowViewState.IdRef="Sequence_301">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sx:XmlDocument" Default="[new System.Xml.XmlDocument()]" Name="xmlDoc" />
                                  <Variable x:TypeArguments="x:String" Name="variable1" />
                                  <Variable x:TypeArguments="scg:List(x:String)" Name="tagsToExcludeList" />
                                  <Variable x:TypeArguments="x:Int32" Name="h1Count" />
                                  <Variable x:TypeArguments="x:Boolean" Name="h1Error" />
                                  <Variable x:TypeArguments="x:Boolean" Name="containsNoNestedSections" />
                                  <Variable x:TypeArguments="x:String" Default="[baseAddress+XmlFilename]" Name="xmlPath" />
                                  <Variable x:TypeArguments="x:String" Name="textOutput" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="tagsToExcludeList = new List&lt;string&gt;();&#xA;tagsToExcludeList.Add(&quot;x:xmpmeta&quot;);&#xA;tagsToExcludeList.Add(&quot;bookmark-tree&quot;);" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="5337,164" sap2010:WorkflowViewState.IdRef="InvokeCode_20" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="tagsToExcludeList">[tagsToExcludeList]</InOutArgument>
                                  </ui:InvokeCode.Arguments>
                                </ui:InvokeCode>
                                <u:ReplaceXmlEntity DisplayName="Replace xml entity" sap:VirtualizedContainerService.HintSize="5337,22" sap2010:WorkflowViewState.IdRef="ReplaceXmlEntity_3" XmlFileName="[xmlPath]" />
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="xmlDoc.Load(xmlPath);" DisplayName="Invoke code (Load XML Document)" sap:VirtualizedContainerService.HintSize="5337,164" sap2010:WorkflowViewState.IdRef="InvokeCode_21" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="XmlFilename">[XmlFilename]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="replacedXmlPath">[DestPathForPdfCopy]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="xmlPath">[xmlPath]</InArgument>
                                  </ui:InvokeCode.Arguments>
                                </ui:InvokeCode>
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="h1Count=0;&#xA;doccount=0;&#xA;h1Error=false;&#xA;sectpage=1;&#xA;sectionNo=0;&#xA;parentIndex=0;&#xA;containsNoNestedSections=true;&#xA;SectionCount=0;&#xA;ListCount=0;&#xA;NotePage=1;&#xA;NoteNo=0;&#xA;pageWithAstrikORHyphen=&quot;&quot;;&#xA;TablePage=1;&#xA;TableNo=0;" DisplayName="Initialize Variables" sap:VirtualizedContainerService.HintSize="5337,164" sap2010:WorkflowViewState.IdRef="InvokeCode_24" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="sectpage">[sectpage]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="sectionNo">[sectionNo]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="parentIndex">[parentIndex]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="containsNoNestedSections">[containsNoNestedSections]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="SectionCount">[SectionCount]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="NotePage">[NotePage]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="NoteNo">[NoteNo]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="TablePage">[TablePage]</InOutArgument>
                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="TableNo">[TableNo]</InOutArgument>
                                  </ui:InvokeCode.Arguments>
                                </ui:InvokeCode>
                                <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="5337,2591" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[xmlDoc.DocumentElement]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="sx:XmlNode">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="5301,2458" sap2010:WorkflowViewState.IdRef="Sequence_286">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If Condition="[typeof(item) Is System.Xml.XmlElement AndAlso Not tagsToExcludeList.Contains(item.Name)]" sap:VirtualizedContainerService.HintSize="5259,2366" sap2010:WorkflowViewState.IdRef="If_180">
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="5114,2219" sap2010:WorkflowViewState.IdRef="Sequence_285">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="lblOutput" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="5072,116" sap2010:WorkflowViewState.IdRef="SendHotkey_31" Key="down" KeyModifiers="None" SpecialKey="True">
                                                <ui:SendHotkey.Target>
                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="b0073795-7edb-4239-9e07-aa646c74648c">
                                                    <ui:Target.TimeoutMS>
                                                      <InArgument x:TypeArguments="x:Int32" />
                                                    </ui:Target.TimeoutMS>
                                                    <ui:Target.WaitForReady>
                                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                                    </ui:Target.WaitForReady>
                                                  </ui:Target>
                                                </ui:SendHotkey.Target>
                                              </ui:SendHotkey>
                                              <Assign sap:VirtualizedContainerService.HintSize="5072,60" sap2010:WorkflowViewState.IdRef="Assign_246">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[i+1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <If Condition="[item.Name.Equals(&quot;Part&quot;) Or item.Name.Equals(&quot;Sect&quot;)]" sap:VirtualizedContainerService.HintSize="5072,1871" sap2010:WorkflowViewState.IdRef="If_179">
                                                <If.Then>
                                                  <Sequence sap:VirtualizedContainerService.HintSize="870,792" sap2010:WorkflowViewState.IdRef="Sequence_278">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[item.HasChildNodes]" sap:VirtualizedContainerService.HintSize="828,573" sap2010:WorkflowViewState.IdRef="If_172">
                                                      <If.Then>
                                                        <If Condition="[item.Name.Equals(&quot;Sect&quot;)]" sap:VirtualizedContainerService.HintSize="521,426" sap2010:WorkflowViewState.IdRef="If_171">
                                                          <If.Then>
                                                            <Sequence sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_277">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_247">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Int32">[SectionCount]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Int32">[SectionCount+1]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_46" UnSafe="False" WorkflowFileName="IdentifySection.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                            </Sequence>
                                                          </If.Then>
                                                        </If>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_248">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[SectionCount]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[SectionCount+1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </If.Else>
                                                    </If>
                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="828,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" UnSafe="False" WorkflowFileName="FindChildrenWithoutSectionFix.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="containsNoNestedSections">[containsNoNestedSections]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="SectionCount">[SectionCount]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                        <InArgument x:TypeArguments="sx:XmlNode" x:Key="item" />
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="NoteNo">[NoteNo]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="NotePage">[NotePage]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="PageNoForNote">[PageNoForNote]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="NoteIssuesList">[NoteIssuesList]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableHeaderList">[TableHeaderList]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="FigureIssuesList">[FigureIssuesList]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableSummaryList">[TableSummaryList]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="TablePage">[TablePage]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="TableNo">[TableNo]</InOutArgument>
                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TOCHyperLinkList">[TOCHyperLinkList]</InOutArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </Sequence>
                                                </If.Then>
                                                <If.Else>
                                                  <If Condition="[item.Name.Equals(&quot;L&quot;)]" sap:VirtualizedContainerService.HintSize="4157,1724" sap2010:WorkflowViewState.IdRef="If_178">
                                                    <If.Then>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="526,453" sap2010:WorkflowViewState.IdRef="Sequence_279">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" UnSafe="False" WorkflowFileName="ListFix.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                            <InArgument x:TypeArguments="sx:XmlNode" x:Key="item">[item]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argument1" />
                                                            <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                            <InArgument x:TypeArguments="x:Boolean" x:Key="moveLeft" />
                                                            <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                                            <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <If Condition="[item.ChildNodes.OfType(Of XmlNode).Any(Function(x) x.NodeType &lt;&gt; XmlNodeType.Text AndAlso x.Name.Equals(&quot;L&quot;))]" sap:VirtualizedContainerService.HintSize="484,234" sap2010:WorkflowViewState.IdRef="If_211">
                                                          <If.Then>
                                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="ListsInParent.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="sx:XmlNode" x:Key="item">[item]</InArgument>
                                                                <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                                                <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </If.Then>
                                                        </If>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <If Condition="[item.Name.Equals(&quot;Document&quot;)]" sap:VirtualizedContainerService.HintSize="3586,1577" sap2010:WorkflowViewState.IdRef="If_177">
                                                        <If.Then>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="418,371" sap2010:WorkflowViewState.IdRef="Sequence_281">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_249">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Int32">[doccount]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Int32">[doccount+1]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_280">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" UnSafe="False" WorkflowFileName="FindChildrenWithoutSectionFix.xaml">
                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                  <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="containsNoNestedSections">[containsNoNestedSections]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="SectionCount">[SectionCount]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                                  <InArgument x:TypeArguments="sx:XmlNode" x:Key="item" />
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="NoteNo">[NoteNo]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="NotePage">[NotePage]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="PageNoForNote">[PageNoForNote]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="NoteIssuesList">[NoteIssuesList]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableHeaderList">[TableHeaderList]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="FigureIssuesList">[FigureIssuesList]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableSummaryList">[TableSummaryList]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="TablePage">[TablePage]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="TableNo">[TableNo]</InOutArgument>
                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TOCHyperLinkList">[TOCHyperLinkList]</InOutArgument>
                                                                </ui:InvokeWorkflowFile.Arguments>
                                                              </ui:InvokeWorkflowFile>
                                                            </Sequence>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <If Condition="[item.Name.Equals(&quot;H1&quot;)]" sap:VirtualizedContainerService.HintSize="3123,1430" sap2010:WorkflowViewState.IdRef="If_176">
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="604,623" sap2010:WorkflowViewState.IdRef="Sequence_314">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_50" UnSafe="False" WorkflowFileName="H1.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="sx:XmlNode" x:Key="item">[item]</InArgument>
                                                                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                    <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,404" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                                  <ui:CommentOut.Body>
                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,326" sap2010:WorkflowViewState.IdRef="Sequence_315">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <If Condition="[item.ChildNodes.OfType(Of XmlNode).Any(Function(x) x.NodeType &lt;&gt; XmlNodeType.Text AndAlso x.Name.Equals(&quot;Link&quot;))]" sap:VirtualizedContainerService.HintSize="484,234" sap2010:WorkflowViewState.IdRef="If_220">
                                                                        <If.Then>
                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="LinksInAnyTag.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InArgument x:TypeArguments="sx:XmlNode" x:Key="TagItem">[item]</InArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                        </If.Then>
                                                                      </If>
                                                                    </Sequence>
                                                                  </ui:CommentOut.Body>
                                                                </ui:CommentOut>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <If Condition="[item.Name.Equals(&quot;Div&quot;)]" sap:VirtualizedContainerService.HintSize="2474,1283" sap2010:WorkflowViewState.IdRef="If_175">
                                                                <If.Then>
                                                                  <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_282">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="FindChildrenWithoutSectionFix.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                        <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="containsNoNestedSections">[containsNoNestedSections]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="SectionCount">[SectionCount]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                                        <InArgument x:TypeArguments="sx:XmlNode" x:Key="item" />
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="NoteNo">[NoteNo]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="NotePage">[NotePage]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="PageNoForNote">[PageNoForNote]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="NoteIssuesList">[NoteIssuesList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableHeaderList">[TableHeaderList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="FigureIssuesList">[FigureIssuesList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableSummaryList">[TableSummaryList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="TablePage">[TablePage]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="TableNo">[TableNo]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TOCHyperLinkList">[TOCHyperLinkList]</InOutArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <Sequence sap:VirtualizedContainerService.HintSize="2053,1136" sap2010:WorkflowViewState.IdRef="Sequence_284">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <If Condition="[item.Name.Equals(&quot;Note&quot;) Or item.Name.Equals(&quot;Figure&quot;)]" sap:VirtualizedContainerService.HintSize="2011,1044" sap2010:WorkflowViewState.IdRef="If_174">
                                                                      <If.Then>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="604,897" sap2010:WorkflowViewState.IdRef="Sequence_307">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="NoteFigureFix.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InOutArgument x:TypeArguments="x:Int32" x:Key="NoteNo">[NoteNo]</InOutArgument>
                                                                              <InOutArgument x:TypeArguments="x:Int32" x:Key="NotePage">[NotePage]</InOutArgument>
                                                                              <InOutArgument x:TypeArguments="x:Int32" x:Key="pageNoForNote">[PageNoForNote]</InOutArgument>
                                                                              <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="NoteIssuesList">[NoteIssuesList]</InOutArgument>
                                                                              <InArgument x:TypeArguments="sx:XmlNode" x:Key="Item">[item]</InArgument>
                                                                              <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="FigureIssuesList">[FigureIssuesList]</InOutArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                          <If Condition="[item.ChildNodes.OfType(Of XmlNode).Any(Function(x) x.NodeType &lt;&gt; XmlNodeType.Text AndAlso x.Name.Equals(&quot;L&quot;))]" sap:VirtualizedContainerService.HintSize="562,234" sap2010:WorkflowViewState.IdRef="If_206">
                                                                            <If.Then>
                                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_62" UnSafe="False" WorkflowFileName="ListsInParent.xaml">
                                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                                  <InArgument x:TypeArguments="sx:XmlNode" x:Key="item">[item]</InArgument>
                                                                                  <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="AstrikOrHyphenCollection">[AstrikOrHyphenCollection]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="pageWithAstrikORHyphen">[pageWithAstrikORHyphen]</InOutArgument>
                                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                              </ui:InvokeWorkflowFile>
                                                                            </If.Then>
                                                                          </If>
                                                                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,404" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                                                            <ui:CommentOut.Body>
                                                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,326" sap2010:WorkflowViewState.IdRef="Sequence_316">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <If Condition="[item.ChildNodes.OfType(Of XmlNode).Any(Function(x) x.NodeType &lt;&gt; XmlNodeType.Text AndAlso x.Name.Equals(&quot;Link&quot;))]" sap:VirtualizedContainerService.HintSize="484,234" sap2010:WorkflowViewState.IdRef="If_221">
                                                                                  <If.Then>
                                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_69" UnSafe="False" WorkflowFileName="LinksInAnyTag.xaml">
                                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                                        <InArgument x:TypeArguments="sx:XmlNode" x:Key="TagItem">[item]</InArgument>
                                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                                    </ui:InvokeWorkflowFile>
                                                                                  </If.Then>
                                                                                </If>
                                                                              </Sequence>
                                                                            </ui:CommentOut.Body>
                                                                          </ui:CommentOut>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <If Condition="[item.Name.Equals(&quot;Table&quot;)]" sap:VirtualizedContainerService.HintSize="1362,698" sap2010:WorkflowViewState.IdRef="If_173">
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_308">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" UnSafe="False" WorkflowFileName="TableSummary.xaml">
                                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableSummaryList">[TableSummaryList]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="TablePage">[TablePage]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="TableNo">[TableNo]</InOutArgument>
                                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                              </ui:InvokeWorkflowFile>
                                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" UnSafe="False" WorkflowFileName="TableHeaderFix.xaml">
                                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                                  <InArgument x:TypeArguments="sx:XmlNode" x:Key="TableItem">[item]</InArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TableHeaderList">[TableHeaderList]</InOutArgument>
                                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                              </ui:InvokeWorkflowFile>
                                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_53" UnSafe="False" WorkflowFileName="ListsInTableFix.xaml">
                                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                                  <InArgument x:TypeArguments="sx:XmlNode" x:Key="item">[item]</InArgument>
                                                                                  <InArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InArgument>
                                                                                  <InArgument x:TypeArguments="x:String" x:Key="argument1" />
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="PagesWithListError">[PagesWithListError]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="ListCount">[ListCount]</InOutArgument>
                                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                              </ui:InvokeWorkflowFile>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <If Condition="[item.Name.Equals(&quot;TOC&quot;)]" sap:VirtualizedContainerService.HintSize="941,551" sap2010:WorkflowViewState.IdRef="If_217">
                                                                              <If.Then>
                                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" UnSafe="False" WorkflowFileName="HyperlinksInTOC.xaml">
                                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                                    <InArgument x:TypeArguments="sx:XmlNode" x:Key="TOCItem">[item]</InArgument>
                                                                                    <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="TOCHyperLinkList">[TOCHyperLinkList]</InOutArgument>
                                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                                </ui:InvokeWorkflowFile>
                                                                              </If.Then>
                                                                              <If.Else>
                                                                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,404" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                                                                  <ui:CommentOut.Body>
                                                                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="526,326" sap2010:WorkflowViewState.IdRef="Sequence_317">
                                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                        </scg:Dictionary>
                                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                                      <If Condition="[item.ChildNodes.OfType(Of XmlNode).Any(Function(x) x.NodeType &lt;&gt; XmlNodeType.Text AndAlso x.Name.Equals(&quot;Link&quot;))]" sap:VirtualizedContainerService.HintSize="484,234" sap2010:WorkflowViewState.IdRef="If_222">
                                                                                        <If.Then>
                                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" UnSafe="False" WorkflowFileName="LinksInAnyTag.xaml">
                                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                                              <InArgument x:TypeArguments="sx:XmlNode" x:Key="TagItem">[item]</InArgument>
                                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                                          </ui:InvokeWorkflowFile>
                                                                                        </If.Then>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </ui:CommentOut.Body>
                                                                                </ui:CommentOut>
                                                                              </If.Else>
                                                                            </If>
                                                                          </If.Else>
                                                                        </If>
                                                                      </If.Else>
                                                                    </If>
                                                                  </Sequence>
                                                                </If.Else>
                                                              </If>
                                                            </If.Else>
                                                          </If>
                                                        </If.Else>
                                                      </If>
                                                    </If.Else>
                                                  </If>
                                                </If.Else>
                                              </If>
                                            </Sequence>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                                <If Condition="[h1Count=0]" sap:VirtualizedContainerService.HintSize="4532,279" sap2010:WorkflowViewState.IdRef="If_181">
                                  <If.Then>
                                    <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_119" Text="H1 Tag : H1 tag not present ERROR" />
                                  </If.Then>
                                </If>
                                <If Condition="[doccount=0]" sap:VirtualizedContainerService.HintSize="4532,426" sap2010:WorkflowViewState.IdRef="If_183">
                                  <If.Then>
                                    <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_120" Text="Document Tag : Document tag is not present" />
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[doccount=1]" sap:VirtualizedContainerService.HintSize="713,279" sap2010:WorkflowViewState.IdRef="If_182">
                                      <If.Then>
                                        <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_121" Text="Document Tag : No error regarding document tag!!! document tag is present 1 time(s)" />
                                      </If.Then>
                                      <If.Else>
                                        <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_122" Text="Document Tag : Document tag is present more than 1 time(s)" />
                                      </If.Else>
                                    </If>
                                  </If.Else>
                                </If>
                                <If Condition="[h1IndexList.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4532,453" sap2010:WorkflowViewState.IdRef="If_184">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_287">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="h1Fix.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InArgument>
                                          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InArgument>
                                          <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Delete">[h1Delete]</InOutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" UnSafe="False" WorkflowFileName="DeleteH1.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InArgument>
                                          <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InArgument>
                                          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="h1Delete">[h1Delete]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="title">[title]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <If Condition="[containsNoNestedSections]" sap:VirtualizedContainerService.HintSize="4532,3986" sap2010:WorkflowViewState.IdRef="If_195">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="2746,3839" sap2010:WorkflowViewState.IdRef="Sequence_300">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[myList.Distinct().Count() &lt;&gt; myList.Count()]" sap:VirtualizedContainerService.HintSize="2704,3747" sap2010:WorkflowViewState.IdRef="If_194">
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="2325,3600" sap2010:WorkflowViewState.IdRef="Sequence_299">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="myList.Clear()" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="2283,164" sap2010:WorkflowViewState.IdRef="InvokeCode_22">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                              </ui:InvokeCode.Arguments>
                                            </ui:InvokeCode>
                                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="2283,116" sap2010:WorkflowViewState.IdRef="SendHotkey_32" Key="home" KeyModifiers="None" SpecialKey="True">
                                              <ui:SendHotkey.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="449bcf49-c16a-4a87-a3d7-860b91f402d8">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                  <ui:Target.WaitForReady>
                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                  </ui:Target.WaitForReady>
                                                </ui:Target>
                                              </ui:SendHotkey.Target>
                                            </ui:SendHotkey>
                                            <ui:ForEach x:TypeArguments="sx:XmlNode" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="2283,2637" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[xmlDoc.DocumentElement]">
                                              <ui:ForEach.Body>
                                                <ActivityAction x:TypeArguments="sx:XmlNode">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="sx:XmlNode" Name="item" />
                                                  </ActivityAction.Argument>
                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="2247,2504" sap2010:WorkflowViewState.IdRef="Sequence_297">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <If Condition="[typeof(item) Is System.Xml.XmlElement AndAlso Not tagsToExcludeList.Contains(item.Name)]" sap:VirtualizedContainerService.HintSize="2205,2412" sap2010:WorkflowViewState.IdRef="If_192">
                                                      <If.Then>
                                                        <Sequence sap:VirtualizedContainerService.HintSize="2060,2265" sap2010:WorkflowViewState.IdRef="Sequence_296">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="x:String" Name="lblOutput" />
                                                          </Sequence.Variables>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="2018,116" sap2010:WorkflowViewState.IdRef="SendHotkey_33" Key="down" KeyModifiers="None" SpecialKey="True">
                                                            <ui:SendHotkey.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="b0073795-7edb-4239-9e07-aa646c74648c">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:SendHotkey.Target>
                                                          </ui:SendHotkey>
                                                          <Assign sap:VirtualizedContainerService.HintSize="2018,60" sap2010:WorkflowViewState.IdRef="Assign_250">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[i+1]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign sap:VirtualizedContainerService.HintSize="2018,60" sap2010:WorkflowViewState.IdRef="Assign_251">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">[parentIndex]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">[parentIndex+1]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <If Condition="[item.Name.Equals(&quot;Part&quot;) Or item.Name.Equals(&quot;Sect&quot;)]" sap:VirtualizedContainerService.HintSize="2018,1817" sap2010:WorkflowViewState.IdRef="If_191">
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="1026,1670" sap2010:WorkflowViewState.IdRef="Sequence_293">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <If Condition="[item.Name.Equals(&quot;Sect&quot;)]" sap:VirtualizedContainerService.HintSize="984,1304" sap2010:WorkflowViewState.IdRef="If_187">
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="839,1157" sap2010:WorkflowViewState.IdRef="Sequence_292">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="797,1065" sap2010:WorkflowViewState.IdRef="Sequence_291">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Edit'" sap:VirtualizedContainerService.HintSize="755,106" sap2010:WorkflowViewState.IdRef="GetValue_9">
                                                                          <ui:GetValue.Target>
                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0de38f6e-b83b-428f-902b-88f92d19bb8f" InformativeScreenshot="a1039f26c61987058811e3fd663b9560" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd aaname='Page Number' cls='Edit' /&gt;">
                                                                              <ui:Target.TimeoutMS>
                                                                                <InArgument x:TypeArguments="x:Int32" />
                                                                              </ui:Target.TimeoutMS>
                                                                              <ui:Target.WaitForReady>
                                                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                              </ui:Target.WaitForReady>
                                                                            </ui:Target>
                                                                          </ui:GetValue.Target>
                                                                          <ui:GetValue.Value>
                                                                            <OutArgument x:TypeArguments="x:Int32">[pageNo]</OutArgument>
                                                                          </ui:GetValue.Value>
                                                                        </ui:GetValue>
                                                                        <AddToCollection x:TypeArguments="x:Int32" Collection="[myList]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="755,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[pageNo]" />
                                                                        <If Condition="[sectpage=pageNo]" sap:VirtualizedContainerService.HintSize="755,399" sap2010:WorkflowViewState.IdRef="If_185">
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_288">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_252">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Int32">[sectionNo]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Int32">[sectionNo+1]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_253">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Int32">[sectpage]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Int32">[pageNo]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_289">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_254">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Int32">[sectionNo]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_255">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Int32">[sectpage]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Int32">[pageNo]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                        <If Condition="[sectionNo&gt;1]" sap:VirtualizedContainerService.HintSize="755,326" sap2010:WorkflowViewState.IdRef="If_186">
                                                                          <If.Then>
                                                                            <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_290">
                                                                              <sap:WorkflowViewStateService.ViewState>
                                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                </scg:Dictionary>
                                                                              </sap:WorkflowViewStateService.ViewState>
                                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" UnSafe="False" WorkflowFileName="SectionFix.xaml">
                                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                                  <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="sectpage">[sectpage]</InOutArgument>
                                                                                  <InArgument x:TypeArguments="x:Int32" x:Key="secq">[secq]</InArgument>
                                                                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="sectionNo">[sectionNo]</InOutArgument>
                                                                                  <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                                  <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                              </ui:InvokeWorkflowFile>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="FindChildren.xaml">
                                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                                <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                                <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                                <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                                <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="sectpage">[sectpage]</InOutArgument>
                                                                                <InArgument x:TypeArguments="x:Int32" x:Key="secq">[secq]</InArgument>
                                                                                <InOutArgument x:TypeArguments="x:Int32" x:Key="sectionNo">[sectionNo]</InOutArgument>
                                                                              </ui:InvokeWorkflowFile.Arguments>
                                                                            </ui:InvokeWorkflowFile>
                                                                          </If.Else>
                                                                        </If>
                                                                      </Sequence>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                </If>
                                                                <If Condition="[item.Name.Equals(&quot;Part&quot;)]" sap:VirtualizedContainerService.HintSize="984,234" sap2010:WorkflowViewState.IdRef="If_188">
                                                                  <If.Then>
                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_58" UnSafe="False" WorkflowFileName="FindChildren.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                        <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="sectpage">[sectpage]</InOutArgument>
                                                                        <InArgument x:TypeArguments="x:Int32" x:Key="secq">[secq]</InArgument>
                                                                        <InOutArgument x:TypeArguments="x:Int32" x:Key="sectionNo">[sectionNo]</InOutArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <If Condition="[item.Name.Equals(&quot;Document&quot;)]" sap:VirtualizedContainerService.HintSize="947,518" sap2010:WorkflowViewState.IdRef="If_190">
                                                                <If.Then>
                                                                  <Sequence sap:VirtualizedContainerService.HintSize="418,371" sap2010:WorkflowViewState.IdRef="Sequence_295">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_256">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:Int32">[doccount]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:Int32">[doccount+1]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_294">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_59" UnSafe="False" WorkflowFileName="FindChildren.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                          <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="sectpage">[sectpage]</InOutArgument>
                                                                          <InArgument x:TypeArguments="x:Int32" x:Key="secq">[secq]</InArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="sectionNo">[sectionNo]</InOutArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <If Condition="[item.Name.Equals(&quot;Div&quot;)]" sap:VirtualizedContainerService.HintSize="484,234" sap2010:WorkflowViewState.IdRef="If_189">
                                                                    <If.Then>
                                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_60" UnSafe="False" WorkflowFileName="FindChildren.xaml">
                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                          <InOutArgument x:TypeArguments="sx:XmlDocument" x:Key="xmlDoc">[xmlDoc]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="sx:XmlNode" x:Key="xmlNode">[item]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="result">[result]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:Boolean)" x:Key="errorList">[errorList]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Boolean" x:Key="errorOrNot">[errorOrNot]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="pageNumber">[pageNumber]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="page">[page]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="listNo">[listNo]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="prePage">[prePage]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="output">[output]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="i">[i]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="listNumbering">[listNumbering]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="currentListNumbering" />
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="listContentIndex">[listContentIndex]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="lblOutput">[lblOutput]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="title">[title]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="doccount">[doccount]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="firstH1">[firstH1]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Boolean" x:Key="h1Error">[h1Error]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="h1Count">[h1Count]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="h1List">[h1List]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="h1IndexList">[h1IndexList]</InOutArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="NewTitle">[title]</InArgument>
                                                                          <InArgument x:TypeArguments="x:Int32" x:Key="pageNo">[pageNo]</InArgument>
                                                                          <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="myList">[myList]</InOutArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="sectpage">[sectpage]</InOutArgument>
                                                                          <InArgument x:TypeArguments="x:Int32" x:Key="secq">[secq]</InArgument>
                                                                          <InOutArgument x:TypeArguments="x:Int32" x:Key="sectionNo">[sectionNo]</InOutArgument>
                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                      </ui:InvokeWorkflowFile>
                                                                    </If.Then>
                                                                  </If>
                                                                </If.Else>
                                                              </If>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </If.Then>
                                                    </If>
                                                  </Sequence>
                                                </ActivityAction>
                                              </ui:ForEach.Body>
                                            </ui:ForEach>
                                            <If Condition="[myList.Distinct().Count() &lt;&gt; myList.Count()]" sap:VirtualizedContainerService.HintSize="2283,471" sap2010:WorkflowViewState.IdRef="If_193">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="376,324" sap2010:WorkflowViewState.IdRef="Sequence_298">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_257">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="scg:List(x:Int32)">[errorPages]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="scg:List(x:Int32)">[myList.GroupBy(Function(m) m) .Where(Function(g) g.Count() &gt; 1) .Select(Function(g) g.Key).ToList]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_123" Text="[&quot;Section Tag : Fixed Following Pages those contained multiple Sections :  &quot;+String.Join(&quot;,&quot;,errorPages)]" />
                                                </Sequence>
                                              </If.Then>
                                            </If>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_124" Text="Section Tag : PDF contains separate Section Tags.-- No Error!" />
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_125" Text="Section Tag : PDF contains Nested section(s)" />
                                  </If.Else>
                                </If>
                              </Sequence>
                              <If Condition="[errorList.Contains(false)]" sap:VirtualizedContainerService.HintSize="4574,371" sap2010:WorkflowViewState.IdRef="If_196">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,224" sap2010:WorkflowViewState.IdRef="Sequence_302">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_126" Text="[&quot;List Tag : List has some Error regarding ListNumbering on following Pages -  &quot;+String.Join(&quot;,&quot;,pageNumber)]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_127" Text="List Tag : This pdf does'nt contain any error regarding ListNumberings" />
                                </If.Else>
                              </If>
                              <If Condition="[PagesWithListError.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4574,279" sap2010:WorkflowViewState.IdRef="If_197">
                                <If.Then>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_128" Text="[&quot;List Tag : List does not matches with the structure requirement Or haveListNumbering index issues!!! Needs manual check on following Pages -  &quot;+String.Join(&quot;,&quot;,PagesWithListError)]" />
                                </If.Then>
                              </If>
                              <If Condition="[AstrikOrHyphenCollection IsNot Nothing]" sap:VirtualizedContainerService.HintSize="4574,426" sap2010:WorkflowViewState.IdRef="If_210">
                                <If.Then>
                                  <If Condition="[AstrikOrHyphenCollection.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="484,279" sap2010:WorkflowViewState.IdRef="If_209">
                                    <If.Then>
                                      <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_139" Text="[&quot;List Tag :  Astrik and Hyphen List  has some Error regarding ListNumbering on following Pages - &quot;+String.Join(&quot;,&quot;,AstrikOrHyphenCollection)]" />
                                    </If.Then>
                                  </If>
                                </If.Then>
                              </If>
                              <If Condition="[NoteIssuesList.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4574,279" sap2010:WorkflowViewState.IdRef="If_198">
                                <If.Then>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_129" Text="[&quot;Note Tag : Error Fixed on (Page.NoteNo)  &quot;+String.Join(&quot;,&quot;,NoteIssuesList)]" />
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_130" Text="Note Tag : No Error/Issue Found" />
                                </If.Else>
                              </If>
                              <If Condition="[FigureIssuesList.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4574,518" sap2010:WorkflowViewState.IdRef="If_214">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="755,371" sap2010:WorkflowViewState.IdRef="Sequence_313">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[FigureIssuesList.Count&lt;&gt;FigureIssuesList.Distinct().Count]" sap:VirtualizedContainerService.HintSize="713,279" sap2010:WorkflowViewState.IdRef="If_215">
                                      <If.Then>
                                        <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_146" Text="[&quot;Figure Tag : Error Fixed on Page(s)  &quot;+String.Join(&quot;,&quot;,FigureIssuesList.GroupBy(Function(m) m) .Where(Function(g) g.Count() &gt; 1) .Select(Function(g) g.Key).ToList)]" />
                                      </If.Then>
                                      <If.Else>
                                        <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_145" Text="[&quot;Figure Tag : Error Fixed on Page(s)  &quot;+String.Join(&quot;,&quot;,FigureIssuesList)]" />
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_144" Text="Figure Tag : No Error/Issue Found" />
                                </If.Else>
                              </If>
                              <If Condition="[TableSummaryList.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4574,279" sap2010:WorkflowViewState.IdRef="If_216">
                                <If.Then>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_147" Text="[&quot;Table Tag : TableSummary Error Fixed on (Page.TableNo)  &quot;+String.Join(&quot;,&quot;,TableSummaryList)]" />
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_148" Text="Table Tag : TableSummary Has No Error/Issue Found" />
                                </If.Else>
                              </If>
                              <If Condition="[TableHeaderList.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4574,371" sap2010:WorkflowViewState.IdRef="If_212">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,224" sap2010:WorkflowViewState.IdRef="Sequence_309">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_140" Text="[&quot;Table Header : Error Fixed on Page(s)  &quot;+String.Join(&quot;,&quot;,TableHeaderList.GroupBy(Function(m) m) .Where(Function(g) g.Count() &gt; 1) .Select(Function(g) g.Key).ToList)]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_142" Text="Table Header : No Error/Issue Found" />
                                </If.Else>
                              </If>
                              <If Condition="[TOCHyperLinkList.Count&lt;&gt;0]" sap:VirtualizedContainerService.HintSize="4574,426" sap2010:WorkflowViewState.IdRef="If_218">
                                <If.Then>
                                  <If Condition="[TOCHyperLinkList.Count&lt;&gt;TOCHyperLinkList.Distinct().Count]" sap:VirtualizedContainerService.HintSize="713,279" sap2010:WorkflowViewState.IdRef="If_219">
                                    <If.Then>
                                      <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_151" Text="[&quot;TOC Tag : HyperLinks Error Fixed on Page(s)  &quot;+String.Join(&quot;,&quot;,TOChyperLinkList.GroupBy(Function(m) m) .Where(Function(g) g.Count() &gt; 1) .Select(Function(g) g.Key).ToList)]" />
                                    </If.Then>
                                    <If.Else>
                                      <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_152" Text="[&quot;TOC Tag : HyperLinks Error Fixed on Page(s)  &quot;+String.Join(&quot;,&quot;,TOCHyperLinkList)]" />
                                    </If.Else>
                                  </If>
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_150" Text="TOC Tag : No HyperLinks Error/Issue Found" />
                                </If.Else>
                              </If>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="4574,106" sap2010:WorkflowViewState.IdRef="Click_78" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e1fb842c-0c1b-40bf-be44-fc29a0a48191" InformativeScreenshot="032193a911e6a23085982d64f3d81c09" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*' /&gt;&lt;wnd aaname='Hide Navigation Tab Strip' cls='AVL_AVView' title='AVExpandCollapseButtonView' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="4292,116" sap2010:WorkflowViewState.IdRef="SendHotkey_36" Key="S" KeyModifiers="Ctrl, Shift">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="94087476-f612-4219-bd2f-b0555afd6c91">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'pane Choose'" sap:VirtualizedContainerService.HintSize="4292,106" sap2010:WorkflowViewState.IdRef="Click_79" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1250fa51-ce6d-49b9-bd81-701244565e23" InformativeScreenshot="4ed8cdd38f8bd668b10b9ba44d3d1224" Selector="&lt;wnd app='acrobat.exe' cls='AVL_AVDialog' title='Save As PDF' /&gt;&lt;wnd cls='AVL_AVView' title='AVAiCDialogView' /&gt;&lt;ctrl idx='1' name='Choose a Different Folder... Button' role='pane' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="4292,134" sap2010:WorkflowViewState.IdRef="TypeInto_6" Text="[FixedFilesPath]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6b93ad7d-77fd-4b40-bc4f-7975460c85ca" InformativeScreenshot="faec54140d2f5363301118b2bcf5a366" Selector="&lt;wnd app='acrobat.exe' cls='#32770' title='Save As PDF' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd aaname='File name:' cls='ComboBox' /&gt;&lt;wnd ctrlid='1001' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="4190,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey 'DirectUIHWND'" sap:VirtualizedContainerService.HintSize="4190,154" sap2010:WorkflowViewState.IdRef="SendHotkey_38" Key="enter" KeyModifiers="None" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a7b6eb6a-3182-4b24-84ed-0b8d0c29b856" InformativeScreenshot="e31995810ab7ce8b5f9e6b071f1d0962" Selector="&lt;wnd app='acrobat.exe' cls='#32770' title='Save As PDF' /&gt;&lt;wnd aaname='Explorer Pane' cls='DirectUIHWND' /&gt;&lt;wnd ctrlid='1121' title='ShellView' /&gt;&lt;wnd aaname='Items View' cls='DirectUIHWND' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="4190,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="4190,106" sap2010:WorkflowViewState.IdRef="Click_80" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f231845b-f27d-4252-a56a-76a0f2fe9800" InformativeScreenshot="ecd76e08b7422def158e37478af89f6b" Selector="&lt;wnd app='acrobat.exe' cls='#32770' title='Save As PDF' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Save' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="4190,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="4190,116" sap2010:WorkflowViewState.IdRef="SendHotkey_34" Key="f4" KeyModifiers="Ctrl" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="bad16eea-702c-4025-9ef4-4c30eece831d">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="4190,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_61" UnSafe="False" WorkflowFileName="LinkIssuesIdentification.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="TestResult">[TestResult]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="pdfName">[DestPathForPdfCopy]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="4190,132" sap2010:WorkflowViewState.IdRef="AppendLine_131" Text="[Environment.NewLine+&quot;----Information For Developers!----&quot;]" />
                              <If Condition="[SectionCount=0]" sap:VirtualizedContainerService.HintSize="4190,279" sap2010:WorkflowViewState.IdRef="If_199">
                                <If.Then>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_132" Text="PDF doesn't contain Section Tag" />
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_133" Text="[&quot;PDF contains &quot;+SectionCount.ToString+&quot; Section(s)&quot;]" />
                                </If.Else>
                              </If>
                              <If Condition="[ListCount=0]" sap:VirtualizedContainerService.HintSize="4190,279" sap2010:WorkflowViewState.IdRef="If_200">
                                <If.Then>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_134" Text="PDF doesn't contain List Tag" />
                                </If.Then>
                                <If.Else>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_135" Text="[&quot;PDF contains &quot;+ListCount.ToString+&quot; List(s)&quot;]" />
                                </If.Else>
                              </If>
                              <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="4190,132" sap2010:WorkflowViewState.IdRef="AppendLine_136" Text="[System.DateTime.Now.ToString]" />
                              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="4190,22" sap2010:WorkflowViewState.IdRef="Delete_11" Path="[pathRequiredByXML+&quot;\&quot;+XmlFilename]" />
                              <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="4190,22" sap2010:WorkflowViewState.IdRef="Delete_17" Path="[DestPathForPdfCopy]" />
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="4236,469" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,396" sap2010:WorkflowViewState.IdRef="Sequence_304">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_137" Text="[Environment.NewLine+&quot;Exception Caught!!&quot;+Environment.NewLine+exception.Message]" />
                                  <ui:AppendLine DisplayName="Append Line" FileName="[TestResult]" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_138" Text="[System.DateTime.Now.ToString]" />
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                          <TryCatch.Finally>
                            <Sequence DisplayName="Sequence(Delete File)" sap:VirtualizedContainerService.HintSize="604,1512" sap2010:WorkflowViewState.IdRef="Sequence_306">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[File.Exists(pathRequiredByXML+&quot;\&quot;+XmlFilename)]" sap:VirtualizedContainerService.HintSize="562,207" sap2010:WorkflowViewState.IdRef="If_201">
                                <If.Then>
                                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_12" Path="[pathRequiredByXML+&quot;\&quot;+XmlFilename]" />
                                </If.Then>
                              </If>
                              <If Condition="[File.Exists(DestPathForPdfCopy)]" sap:VirtualizedContainerService.HintSize="562,207" sap2010:WorkflowViewState.IdRef="If_202">
                                <If.Then>
                                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_13" Path="[DestPathForPdfCopy]" />
                                </If.Then>
                              </If>
                              <If Condition="[Directory.Exists(baseAddress+&quot;\\images&quot;)]" sap:VirtualizedContainerService.HintSize="562,207" sap2010:WorkflowViewState.IdRef="If_203">
                                <If.Then>
                                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_14" Path="[baseAddress+&quot;\\images&quot;]" />
                                </If.Then>
                              </If>
                              <If Condition="[Directory.Exists(baseAddress+&quot;\\immagini&quot;)]" sap:VirtualizedContainerService.HintSize="562,207" sap2010:WorkflowViewState.IdRef="If_204">
                                <If.Then>
                                  <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_15" Path="[baseAddress+&quot;\\immagini&quot;]" />
                                </If.Then>
                              </If>
                              <ui:ForEach x:TypeArguments="si:FileInfo" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,432" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[new DirectoryInfo(baseAddress).GetFiles]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="si:FileInfo">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="si:FileInfo" Name="itemDltImg" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,299" sap2010:WorkflowViewState.IdRef="Sequence_310">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[itemDltImg.Exists AndAlso (itemDltImg.Extension.Equals(&quot;.JPG&quot;) Or itemDltImg.Extension.Equals(&quot;.png&quot;))]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_213">
                                        <If.Then>
                                          <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_18" Path="[itemDltImg.ToString]" />
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                            </Sequence>
                          </TryCatch.Finally>
                        </TryCatch>
                      </If.Then>
                      <If.Else>
                        <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_16" Path="[name.ToString.Remove(0,4)]" />
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:CloseApplication DisplayName="Close Application 'Acrobat.exe Adobe'" sap:VirtualizedContainerService.HintSize="4593,106" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="60bc591f-676c-4bb2-8a37-d6f4dccdd26c" InformativeScreenshot="4478593dca9172c36023318ffad5db8f">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:OpenApplication.Body>
    </ui:OpenApplication>
  </Sequence>
</Activity>